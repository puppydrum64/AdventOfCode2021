	.model small
	.stack 1024
	
	.data
	
	include R:\SrcDOS\adventOfCode\sonar_input.asm
	
UserRam byte 256 DUP (0)


SumOfMeasurements 	equ UserRam
;2 bytes, total number of measurements that are greater than the one before
	
;END OF USER RAM

		

	.code
	
start:
	;ANSWER TO QUESTION 1 - WRITTEN BY WILLIAM DRUM
	mov ax,@data
	mov ds,ax
	mov es,ax
	
	cld
	
	mov ax,2		;clear screen by setting video mode to 0
	int 10h			;select text mode
	
	mov si,offset SONAR_DATA
	
	inc si
	inc si
	
	mov di,offset SONAR_DATA
	
	
	mov cx,offset SONAR_DATA_END
	mov dx,si
	
	sub cx,dx		;this is our loop counter for when to end.
	shr cx,1		;divide by 2 to get the proper range.

	
	
mainproc:
	cmpsw
	jb skipInc
		inc word ptr [ds:SumOfMeasurements]
skipInc:
	loop mainproc
	
	
	mov dx,word ptr [ds:SumOfMeasurements]
	mov al,dh
	call Printhex
	mov al,dl
	call Printhex
	
	
	
	
	mov ax,4C00h		;return to dos
	int 21h
	
;;;; I/O STUFF - WRITTEN BY KEITH OF CHIBIAKUMAS.COM
Printhex:
	push ax
		mov ah,al
		and ah,11110000B
			ror ah,1	;can't use >1 on 8086
			ror ah,1
			ror ah,1
			ror ah,1
		call PrintHexChar
		mov ah,al
		and ah,00001111B
		call PrintHexChar
	pop ax
	ret
PrintHexChar:
	push ax
		cmp ah,9
		jle PrintHexCharNumber
		add ah,'A'-('0'+10)
PrintHexCharNumber:
		add ah,'0'
		mov al,ah
		mov ah,0Eh
		int 10h
	pop ax
	ret

	
end start
